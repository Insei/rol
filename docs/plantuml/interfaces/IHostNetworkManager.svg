<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="574px" preserveAspectRatio="none" style="width:1259px;height:574px;background:#FFFFFF;" version="1.1" viewBox="0 0 1259 574" width="1259px" zoomAndPan="magnify"><defs/><g><!--MD5=[d5ac3844f66b12d9e08170e47495e096]
cluster app--><g id="cluster_app"><path d="M8.5,6 L35.5,6 A3.75,3.75 0 0 1 38,8.5 L45,29.6094 L1249.5,29.6094 A2.5,2.5 0 0 1 1252,32.1094 L1252,564.5 A2.5,2.5 0 0 1 1249.5,567 L8.5,567 A2.5,2.5 0 0 1 6,564.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="6" x2="45" y1="29.6094" y2="29.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="26" x="10" y="22.5332">app</text></g><!--MD5=[7d972e8a870a7d3102e7596738050350]
class IHostNetworkLink--><g id="elem_IHostNetworkLink"><rect codeLine="3" fill="#F1F1F1" height="108.8281" id="IHostNetworkLink" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="195" x="1040.5" y="242"/><ellipse cx="1078.45" cy="258" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1079.4031,254.6406 L1079.4031,261.2969 L1081.1219,261.2969 Q1081.7313,261.2969 1081.9969,261.5313 Q1082.2625,261.7656 1082.2625,262.1563 Q1082.2625,262.5313 1081.9969,262.7656 Q1081.7313,263 1081.1219,263 L1075.9813,263 Q1075.3719,263 1075.1063,262.7656 Q1074.8406,262.5313 1074.8406,262.1406 Q1074.8406,261.7656 1075.1063,261.5313 Q1075.3719,261.2969 1075.9813,261.2969 L1077.7,261.2969 L1077.7,254.6406 L1075.9813,254.6406 Q1075.3719,254.6406 1075.1063,254.4063 Q1074.8406,254.1719 1074.8406,253.7813 Q1074.8406,253.4063 1075.1063,253.1719 Q1075.3719,252.9375 1075.9813,252.9375 L1081.1219,252.9375 Q1081.7313,252.9375 1081.9969,253.1719 Q1082.2625,253.4063 1082.2625,253.7813 Q1082.2625,254.1719 1081.9969,254.4063 Q1081.7313,254.6406 1081.1219,254.6406 L1079.4031,254.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="112" x="1097.55" y="263.7285">IHostNetworkLink</text><line style="stroke:#181818;stroke-width:0.5;" x1="1041.5" x2="1234.5" y1="274" y2="274"/><ellipse cx="1051.5" cy="285" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="1060.5" y="292.5332">GetName() string</text><line style="stroke:#181818;stroke-width:1.0;" x1="1041.5" x2="1234.5" y1="299.6094" y2="299.6094"/><ellipse cx="1051.5" cy="310.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="1060.5" y="318.1426">GetType() string</text><line style="stroke:#181818;stroke-width:1.0;" x1="1041.5" x2="1234.5" y1="325.2188" y2="325.2188"/><ellipse cx="1051.5" cy="336.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1060.5" y="343.752">GetAddresses() []net.IPNet</text></g><path d="M810.5,242 L810.5,268.3516 A0,0 0 0 0 810.5,268.3516 L977.5,268.3516 A0,0 0 0 0 977.5,268.3516 L977.5,260 L1044.5,286.8047 L977.5,252 L977.5,252 L967.5,242 L810.5,242 A0,0 0 0 0 810.5,242 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M967.5,242 L967.5,252 L977.5,252 L967.5,242 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="816.5" y="260.4951">Gets host interface name</text><path d="M810.5,278.3516 L810.5,304.7031 A0,0 0 0 0 810.5,304.7031 L970.5,304.7031 A0,0 0 0 0 970.5,304.7031 L970.5,296.3516 L1044.5,312.4141 L970.5,288.3516 L970.5,288.3516 L960.5,278.3516 L810.5,278.3516 A0,0 0 0 0 810.5,278.3516 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M960.5,278.3516 L960.5,288.3516 L970.5,288.3516 L960.5,278.3516 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="139" x="816.5" y="296.8467">Gets host interface type</text><path d="M810.5,314.7031 L810.5,341.0547 A0,0 0 0 0 810.5,341.0547 L1005.5,341.0547 A0,0 0 0 0 1005.5,341.0547 L1005.5,332.7031 L1044.5,338.0234 L1005.5,324.7031 L1005.5,324.7031 L995.5,314.7031 L810.5,314.7031 A0,0 0 0 0 810.5,314.7031 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M995.5,314.7031 L995.5,324.7031 L1005.5,324.7031 L995.5,314.7031 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="174" x="816.5" y="333.1982">Gets host interface addresses</text><!--MD5=[eee03abc33d997fda74f03d63bc5bd12]
class IHostNetworkManager--><g id="elem_IHostNetworkManager"><rect codeLine="5" fill="#F1F1F1" height="390.5313" id="IHostNetworkManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="356" x="419" y="101"/><ellipse cx="521.75" cy="117" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M522.7031,113.6406 L522.7031,120.2969 L524.4219,120.2969 Q525.0313,120.2969 525.2969,120.5313 Q525.5625,120.7656 525.5625,121.1563 Q525.5625,121.5313 525.2969,121.7656 Q525.0313,122 524.4219,122 L519.2813,122 Q518.6719,122 518.4063,121.7656 Q518.1406,121.5313 518.1406,121.1406 Q518.1406,120.7656 518.4063,120.5313 Q518.6719,120.2969 519.2813,120.2969 L521,120.2969 L521,113.6406 L519.2813,113.6406 Q518.6719,113.6406 518.4063,113.4063 Q518.1406,113.1719 518.1406,112.7813 Q518.1406,112.4063 518.4063,112.1719 Q518.6719,111.9375 519.2813,111.9375 L524.4219,111.9375 Q525.0313,111.9375 525.2969,112.1719 Q525.5625,112.4063 525.5625,112.7813 Q525.5625,113.1719 525.2969,113.4063 Q525.0313,113.6406 524.4219,113.6406 L522.7031,113.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="142" x="542.25" y="122.7285">IHostNetworkManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="420" x2="774" y1="133" y2="133"/><ellipse cx="430" cy="144" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="439" y="151.5332">GetList() ([]IHostNetworkLink, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="158.6094" y2="158.6094"/><ellipse cx="430" cy="169.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="439" y="177.1426">GetByName(name string) (IHostNetworkLink, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="184.2188" y2="184.2188"/><ellipse cx="430" cy="195.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="317" x="439" y="202.752">CreateVlan(master string, vlanID int) (string, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="209.8281" y2="209.8281"/><ellipse cx="430" cy="220.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="439" y="228.3613">CreateBridge(name string) (string, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="235.4375" y2="235.4375"/><ellipse cx="430" cy="246.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="330" x="439" y="253.9707">SetLinkMaster(slaveName, masterName string) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="261.0469" y2="261.0469"/><ellipse cx="430" cy="272.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="439" y="279.5801">UnsetLinkMaster(linkName string) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="286.6563" y2="286.6563"/><ellipse cx="430" cy="297.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="439" y="305.1895">SetLinkUp(linkName string) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="312.2656" y2="312.2656"/><ellipse cx="430" cy="323.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="439" y="330.7988">DeleteLinkByName(name string) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="337.875" y2="337.875"/><ellipse cx="430" cy="348.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="294" x="439" y="356.4082">AddrAdd(linkName string, addr net.IPNet) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="363.4844" y2="363.4844"/><ellipse cx="430" cy="374.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="439" y="382.0176">AddrDelete(linkName string, addr net.IPNet) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="389.0938" y2="389.0938"/><ellipse cx="430" cy="400.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="439" y="407.627">SaveConfiguration() error</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="414.7031" y2="414.7031"/><ellipse cx="430" cy="425.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="439" y="433.2363">RestoreFromBackup() error</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="440.3125" y2="440.3125"/><ellipse cx="430" cy="451.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="439" y="458.8457">ResetChanges() error</text><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="774" y1="465.9219" y2="465.9219"/><ellipse cx="430" cy="476.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="439" y="484.4551">HasUnsavedChanges() bool</text></g><path d="M22.5,42 L22.5,68.3516 A0,0 0 0 0 22.5,68.3516 L244.5,68.3516 A0,0 0 0 0 244.5,68.3516 L244.5,60 L423,145.8047 L244.5,52 L244.5,52 L234.5,42 L22.5,42 A0,0 0 0 0 22.5,42 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M234.5,42 L234.5,52 L244.5,52 L234.5,42 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="201" x="28.5" y="60.4951">Gets list of host network interfaces</text><path d="M22.5,78.3516 L22.5,104.7031 A0,0 0 0 0 22.5,104.7031 L274.5,104.7031 A0,0 0 0 0 274.5,104.7031 L274.5,96.3516 L423,171.4141 L274.5,88.3516 L274.5,88.3516 L264.5,78.3516 L22.5,78.3516 A0,0 0 0 0 22.5,78.3516 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M264.5,78.3516 L264.5,88.3516 L274.5,88.3516 L264.5,78.3516 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="231" x="28.5" y="96.8467">Gets host network interface by its name</text><path d="M22.5,114.7031 L22.5,141.0547 A0,0 0 0 0 22.5,141.0547 L372.5,141.0547 A0,0 0 0 0 372.5,141.0547 L372.5,132.7031 L423,197.0234 L372.5,124.7031 L372.5,124.7031 L362.5,114.7031 L22.5,114.7031 A0,0 0 0 0 22.5,114.7031 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M362.5,114.7031 L362.5,124.7031 L372.5,124.7031 L362.5,114.7031 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="329" x="28.5" y="133.1982">Create host vlan interface with name rol.{Master}.{VlanID}</text><path d="M22.5,151.0547 L22.5,177.4063 A0,0 0 0 0 22.5,177.4063 L344.5,177.4063 A0,0 0 0 0 344.5,177.4063 L344.5,169.0547 L423,222.6328 L344.5,161.0547 L344.5,161.0547 L334.5,151.0547 L22.5,151.0547 A0,0 0 0 0 22.5,151.0547 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M334.5,151.0547 L334.5,161.0547 L344.5,161.0547 L334.5,151.0547 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="301" x="28.5" y="169.5498">Create host bridge interface with name rol.br.{Name}</text><path d="M22.5,187.4063 L22.5,213.7578 A0,0 0 0 0 22.5,213.7578 L149.5,213.7578 A0,0 0 0 0 149.5,213.7578 L149.5,205.4063 L423,248.2422 L149.5,197.4063 L149.5,197.4063 L139.5,187.4063 L22.5,187.4063 A0,0 0 0 0 22.5,187.4063 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M139.5,187.4063 L139.5,197.4063 L149.5,197.4063 L139.5,187.4063 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="106" x="28.5" y="205.9014">Set master for link</text><path d="M22.5,223.7578 L22.5,250.1094 A0,0 0 0 0 22.5,250.1094 L222.5,250.1094 A0,0 0 0 0 222.5,250.1094 L222.5,241.7578 L423,273.8516 L222.5,233.7578 L222.5,233.7578 L212.5,223.7578 L22.5,223.7578 A0,0 0 0 0 22.5,223.7578 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M212.5,223.7578 L212.5,233.7578 L222.5,233.7578 L212.5,223.7578 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="179" x="28.5" y="242.2529">Removes the master of the link</text><path d="M22.5,260.1094 L22.5,286.4609 A0,0 0 0 0 22.5,286.4609 L183.5,286.4609 A0,0 0 0 0 183.5,286.4609 L183.5,278.1094 L423,299.4609 L183.5,270.1094 L183.5,270.1094 L173.5,260.1094 L22.5,260.1094 A0,0 0 0 0 22.5,260.1094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M173.5,260.1094 L173.5,270.1094 L183.5,270.1094 L173.5,260.1094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="140" x="28.5" y="278.6045">Enables the link on host</text><path d="M22.5,296.4609 L22.5,322.8125 A0,0 0 0 0 22.5,322.8125 L259.5,322.8125 A0,0 0 0 0 259.5,322.8125 L259.5,314.4609 L423,325.0703 L259.5,306.4609 L259.5,306.4609 L249.5,296.4609 L22.5,296.4609 A0,0 0 0 0 22.5,296.4609 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M249.5,296.4609 L249.5,306.4609 L259.5,306.4609 L249.5,296.4609 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="216" x="28.5" y="314.9561">Deletes interface on host by its name</text><path d="M22.5,332.8125 L22.5,359.1641 A0,0 0 0 0 22.5,359.1641 L277.5,359.1641 A0,0 0 0 0 277.5,359.1641 L277.5,350.8125 L423,350.6797 L277.5,342.8125 L277.5,342.8125 L267.5,332.8125 L22.5,332.8125 A0,0 0 0 0 22.5,332.8125 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M267.5,332.8125 L267.5,342.8125 L277.5,342.8125 L267.5,332.8125 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="234" x="28.5" y="351.3076">Add new ip address for network interface</text><path d="M22.5,369.1641 L22.5,395.5156 A0,0 0 0 0 22.5,395.5156 L264.5,395.5156 A0,0 0 0 0 264.5,395.5156 L264.5,387.1641 L423,376.2891 L264.5,379.1641 L264.5,379.1641 L254.5,369.1641 L22.5,369.1641 A0,0 0 0 0 22.5,369.1641 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M254.5,369.1641 L254.5,379.1641 L264.5,379.1641 L254.5,369.1641 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="221" x="28.5" y="387.6592">Delete ip address for network interface</text><path d="M22.5,405.5156 L22.5,431.8672 A0,0 0 0 0 22.5,431.8672 L354.5,431.8672 A0,0 0 0 0 354.5,431.8672 L354.5,423.5156 L423,401.8984 L354.5,415.5156 L354.5,415.5156 L344.5,405.5156 L22.5,405.5156 A0,0 0 0 0 22.5,405.5156 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M344.5,405.5156 L344.5,415.5156 L354.5,415.5156 L344.5,405.5156 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="311" x="28.5" y="424.0107">Save current host network configuration to the storage</text><path d="M22.5,441.8672 L22.5,468.2188 A0,0 0 0 0 22.5,468.2188 L378.5,468.2188 A0,0 0 0 0 378.5,468.2188 L378.5,459.8672 L423,427.5078 L378.5,451.8672 L378.5,451.8672 L368.5,441.8672 L22.5,441.8672 A0,0 0 0 0 22.5,441.8672 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M368.5,441.8672 L368.5,451.8672 L378.5,451.8672 L368.5,441.8672 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="335" x="28.5" y="460.3623">Restore and apply host network configuration from backup</text><path d="M22.5,478.2188 L22.5,504.5703 A0,0 0 0 0 22.5,504.5703 L383.5,504.5703 A0,0 0 0 0 383.5,504.5703 L383.5,496.2188 L423,453.1172 L383.5,488.2188 L383.5,488.2188 L373.5,478.2188 L22.5,478.2188 A0,0 0 0 0 22.5,478.2188 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M373.5,478.2188 L373.5,488.2188 L383.5,488.2188 L373.5,478.2188 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="340" x="28.5" y="496.7139">Reset all applied changes to state from saved configuration</text><path d="M22.5,514.5703 L22.5,540.9219 A0,0 0 0 0 22.5,540.9219 L246.5,540.9219 A0,0 0 0 0 246.5,540.9219 L246.5,532.5703 L423,478.7266 L246.5,524.5703 L246.5,524.5703 L236.5,514.5703 L22.5,514.5703 A0,0 0 0 0 22.5,514.5703 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M236.5,514.5703 L236.5,524.5703 L246.5,524.5703 L236.5,514.5703 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="203" x="28.5" y="533.0654">Gets a flag about unsaved changes</text><!--MD5=[e9bad6c177079b3de43d58a0c1053c23]
@startuml

!include ../interfaces/IHostNetworkLink.puml

package app {
    interface IHostNetworkManager {
        +GetList() ([]IHostNetworkLink, error)
        - -
        +GetByName(name string) (IHostNetworkLink, error)
        - -
        +CreateVlan(master string, vlanID int) (string, error)
        - -
        +CreateBridge(name string) (string, error)
        - -
        +SetLinkMaster(slaveName, masterName string) error
        - -
        +UnsetLinkMaster(linkName string) error
        - -
        +SetLinkUp(linkName string) error
        - -
        +DeleteLinkByName(name string) error
        - -
        +AddrAdd(linkName string, addr net.IPNet) error
        - -
        +AddrDelete(linkName string, addr net.IPNet) error
        - -
        +SaveConfiguration() error
        - -
        +RestoreFromBackup() error
        - -
        +ResetChanges() error
        - -
        +HasUnsavedChanges() bool
    }

    note left of IHostNetworkManager::GetList
    Gets list of host network interfaces
    end note

    note left of IHostNetworkManager::GetByName
    Gets host network interface by its name
    end note

    note left of IHostNetworkManager::CreateVlan
    Create host vlan interface with name rol.{Master}.{VlanID}
    end note

    note left of IHostNetworkManager::CreateBridge
    Create host bridge interface with name rol.br.{Name}
    end note

    note left of IHostNetworkManager::SetLinkMaster
    Set master for link
    end note

    note left of IHostNetworkManager::UnsetLinkMaster
    Removes the master of the link
    end note

    note left of IHostNetworkManager::SetLinkUp
    Enables the link on host
    end note

    note left of IHostNetworkManager::DeleteLinkByName
    Deletes interface on host by its name
    end note

    note left of IHostNetworkManager::AddrAdd
    Add new ip address for network interface
    end note

    note left of IHostNetworkManager::AddrDelete
    Delete ip address for network interface
    end note

    note left of IHostNetworkManager::SaveConfiguration
    Save current host network configuration to the storage
    end note

    note left of IHostNetworkManager::RestoreFromBackup
    Restore and apply host network configuration from backup
    end note

    note left of IHostNetworkManager::ResetChanges
    Reset all applied changes to state from saved configuration
    end note

    note left of IHostNetworkManager::HasUnsavedChanges
    Gets a flag about unsaved changes
    end note
}

@enduml

@startuml


package app {
    interface IHostNetworkLink {
        +GetName() string
        - -
        +GetType() string
        - -
        +GetAddresses() []net.IPNet
    }

    note left of IHostNetworkLink::GetName
    Gets host interface name
    end note

    note left of IHostNetworkLink::GetType
    Gets host interface type
    end note

    note left of IHostNetworkLink::GetAddresses
    Gets host interface addresses
    end note
}


package app {
    interface IHostNetworkManager {
        +GetList() ([]IHostNetworkLink, error)
        - -
        +GetByName(name string) (IHostNetworkLink, error)
        - -
        +CreateVlan(master string, vlanID int) (string, error)
        - -
        +CreateBridge(name string) (string, error)
        - -
        +SetLinkMaster(slaveName, masterName string) error
        - -
        +UnsetLinkMaster(linkName string) error
        - -
        +SetLinkUp(linkName string) error
        - -
        +DeleteLinkByName(name string) error
        - -
        +AddrAdd(linkName string, addr net.IPNet) error
        - -
        +AddrDelete(linkName string, addr net.IPNet) error
        - -
        +SaveConfiguration() error
        - -
        +RestoreFromBackup() error
        - -
        +ResetChanges() error
        - -
        +HasUnsavedChanges() bool
    }

    note left of IHostNetworkManager::GetList
    Gets list of host network interfaces
    end note

    note left of IHostNetworkManager::GetByName
    Gets host network interface by its name
    end note

    note left of IHostNetworkManager::CreateVlan
    Create host vlan interface with name rol.{Master}.{VlanID}
    end note

    note left of IHostNetworkManager::CreateBridge
    Create host bridge interface with name rol.br.{Name}
    end note

    note left of IHostNetworkManager::SetLinkMaster
    Set master for link
    end note

    note left of IHostNetworkManager::UnsetLinkMaster
    Removes the master of the link
    end note

    note left of IHostNetworkManager::SetLinkUp
    Enables the link on host
    end note

    note left of IHostNetworkManager::DeleteLinkByName
    Deletes interface on host by its name
    end note

    note left of IHostNetworkManager::AddrAdd
    Add new ip address for network interface
    end note

    note left of IHostNetworkManager::AddrDelete
    Delete ip address for network interface
    end note

    note left of IHostNetworkManager::SaveConfiguration
    Save current host network configuration to the storage
    end note

    note left of IHostNetworkManager::RestoreFromBackup
    Restore and apply host network configuration from backup
    end note

    note left of IHostNetworkManager::ResetChanges
    Reset all applied changes to state from saved configuration
    end note

    note left of IHostNetworkManager::HasUnsavedChanges
    Gets a flag about unsaved changes
    end note
}

@enduml

PlantUML version 1.2022.6(Tue Jun 21 20:34:49 MSK 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1251
Language: ru
Country: RU
--></g></svg>