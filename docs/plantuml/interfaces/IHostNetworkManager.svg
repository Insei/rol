<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="696px" preserveAspectRatio="none" style="width:1623px;height:696px;background:#FFFFFF;" version="1.1" viewBox="0 0 1623 696" width="1623px" zoomAndPan="magnify"><defs/><g><!--MD5=[d5ac3844f66b12d9e08170e47495e096]
cluster app--><g id="cluster_app"><path d="M8.5,6 L38.5,6 A3.75,3.75 0 0 1 41,8.5 L48,28.2969 L1613.5,28.2969 A2.5,2.5 0 0 1 1616,30.7969 L1616,686.5 A2.5,2.5 0 0 1 1613.5,689 L8.5,689 A2.5,2.5 0 0 1 6,686.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="48" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="29" x="10" y="20.9951">app</text></g><!--MD5=[7d972e8a870a7d3102e7596738050350]
class IHostNetworkLink--><g id="elem_IHostNetworkLink"><rect codeLine="3" fill="#F1F1F1" height="104.8906" id="IHostNetworkLink" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="1388" y="304.5"/><ellipse cx="1429.1" cy="320.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1425.0219,316.2656 L1425.0219,314.1094 L1432.4125,314.1094 L1432.4125,316.2656 L1429.9438,316.2656 L1429.9438,324.3438 L1432.4125,324.3438 L1432.4125,326.5 L1425.0219,326.5 L1425.0219,324.3438 L1427.4906,324.3438 L1427.4906,316.2656 L1425.0219,316.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="122" x="1448.9" y="325.3467">IHostNetworkLink</text><line style="stroke:#181818;stroke-width:0.5;" x1="1389" x2="1599" y1="336.5" y2="336.5"/><ellipse cx="1399" cy="350.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="1408" y="353.4951">GetName() string</text><line style="stroke:#181818;stroke-width:1.0;" x1="1389" x2="1599" y1="360.7969" y2="360.7969"/><ellipse cx="1399" cy="374.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="1408" y="377.792">GetType() string</text><line style="stroke:#181818;stroke-width:1.0;" x1="1389" x2="1599" y1="385.0938" y2="385.0938"/><ellipse cx="1399" cy="398.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="1408" y="402.0889">GetAddresses() []net.IPNet</text></g><path d="M1139.5,304.5 L1139.5,329.6328 A0,0 0 0 0 1139.5,329.6328 L1323.5,329.6328 A0,0 0 0 0 1323.5,329.6328 L1323.5,322.5 L1392,348.6484 L1323.5,314.5 L1323.5,314.5 L1313.5,304.5 L1139.5,304.5 A0,0 0 0 0 1139.5,304.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1313.5,304.5 L1313.5,314.5 L1323.5,314.5 L1313.5,304.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="163" x="1145.5" y="321.5669">Gets host interface name</text><path d="M1139.5,339.6328 L1139.5,364.7656 A0,0 0 0 0 1139.5,364.7656 L1314.5,364.7656 A0,0 0 0 0 1314.5,364.7656 L1314.5,357.6328 L1392,372.9453 L1314.5,349.6328 L1314.5,349.6328 L1304.5,339.6328 L1139.5,339.6328 A0,0 0 0 0 1139.5,339.6328 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1304.5,339.6328 L1304.5,349.6328 L1314.5,349.6328 L1304.5,339.6328 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="154" x="1145.5" y="356.6997">Gets host interface type</text><path d="M1139.5,374.7656 L1139.5,399.8984 A0,0 0 0 0 1139.5,399.8984 L1352.5,399.8984 A0,0 0 0 0 1352.5,399.8984 L1352.5,392.7656 L1392,397.2422 L1352.5,384.7656 L1352.5,384.7656 L1342.5,374.7656 L1139.5,374.7656 A0,0 0 0 0 1139.5,374.7656 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1342.5,374.7656 L1342.5,384.7656 L1352.5,384.7656 L1342.5,374.7656 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="192" x="1145.5" y="391.8325">Gets host interface addresses</text><!--MD5=[eee03abc33d997fda74f03d63bc5bd12]
class IHostNetworkManager--><g id="elem_IHostNetworkManager"><rect codeLine="5" fill="#F1F1F1" height="469.3438" id="IHostNetworkManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="646" x="458" y="122.5"/><ellipse cx="699.75" cy="138.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M695.6719,134.2656 L695.6719,132.1094 L703.0625,132.1094 L703.0625,134.2656 L700.5938,134.2656 L700.5938,142.3438 L703.0625,142.3438 L703.0625,144.5 L695.6719,144.5 L695.6719,142.3438 L698.1406,142.3438 L698.1406,134.2656 L695.6719,134.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="154" x="720.25" y="143.3467">IHostNetworkManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="459" x2="1103" y1="154.5" y2="154.5"/><ellipse cx="469" cy="168.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="478" y="171.4951">GetList() ([]IHostNetworkLink, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="178.7969" y2="178.7969"/><ellipse cx="469" cy="192.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="478" y="195.792">GetByName(name string) (IHostNetworkLink, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="203.0938" y2="203.0938"/><ellipse cx="469" cy="216.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="478" y="220.0889">CreateVlan(master string, vlanID int) (string, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="227.3906" y2="227.3906"/><ellipse cx="469" cy="241.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="478" y="244.3857">CreateBridge(name string) (string, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="251.6875" y2="251.6875"/><ellipse cx="469" cy="265.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="358" x="478" y="268.6826">SetLinkMaster(slaveName, masterName string) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="275.9844" y2="275.9844"/><ellipse cx="469" cy="289.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="478" y="292.9795">UnsetLinkMaster(linkName string) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="300.2813" y2="300.2813"/><ellipse cx="469" cy="313.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="478" y="317.2764">SetLinkUp(linkName string) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="324.5781" y2="324.5781"/><ellipse cx="469" cy="338.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="478" y="341.5732">DeleteLinkByName(name string) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="348.875" y2="348.875"/><ellipse cx="469" cy="362.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="478" y="365.8701">AddrAdd(linkName string, addr net.IPNet) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="373.1719" y2="373.1719"/><ellipse cx="469" cy="386.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="478" y="390.167">AddrDelete(linkName string, addr net.IPNet) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="397.4688" y2="397.4688"/><ellipse cx="469" cy="411.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="620" x="478" y="414.4639">CreateTrafficRule(table string, rule HostNetworkTrafficRule) (HostNetworkTrafficRule, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="421.7656" y2="421.7656"/><ellipse cx="469" cy="435.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="441" x="478" y="438.7607">DeleteTrafficRule(table string, rule HostNetworkTrafficRule) error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="446.0625" y2="446.0625"/><ellipse cx="469" cy="459.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="504" x="478" y="463.0576">GetChainRules(table string, chain string) ([]HostNetworkTrafficRule, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="470.3594" y2="470.3594"/><ellipse cx="469" cy="484.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="415" x="478" y="487.3545">GetTableRules(table string) ([]HostNetworkTrafficRule, error)</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="494.6563" y2="494.6563"/><ellipse cx="469" cy="508.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="478" y="511.6514">SaveConfiguration() error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="518.9531" y2="518.9531"/><ellipse cx="469" cy="532.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="478" y="535.9482">RestoreFromBackup() error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="543.25" y2="543.25"/><ellipse cx="469" cy="556.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="478" y="560.2451">ResetChanges() error</text><line style="stroke:#181818;stroke-width:1.0;" x1="459" x2="1103" y1="567.5469" y2="567.5469"/><ellipse cx="469" cy="581.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="478" y="584.542">HasUnsavedChanges() bool</text></g><path d="M21.5,41 L21.5,66.1328 A0,0 0 0 0 21.5,66.1328 L263.5,66.1328 A0,0 0 0 0 263.5,66.1328 L263.5,59 L462,166.6484 L263.5,51 L263.5,51 L253.5,41 L21.5,41 A0,0 0 0 0 21.5,41 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M253.5,41 L253.5,51 L263.5,51 L253.5,41 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="221" x="27.5" y="58.0669">Gets list of host network interfaces</text><path d="M21.5,76.1328 L21.5,101.2656 A0,0 0 0 0 21.5,101.2656 L297.5,101.2656 A0,0 0 0 0 297.5,101.2656 L297.5,94.1328 L462,190.9453 L297.5,86.1328 L297.5,86.1328 L287.5,76.1328 L21.5,76.1328 A0,0 0 0 0 21.5,76.1328 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M287.5,76.1328 L287.5,86.1328 L297.5,86.1328 L287.5,76.1328 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="255" x="27.5" y="93.1997">Gets host network interface by its name</text><path d="M21.5,111.2656 L21.5,136.3984 A0,0 0 0 0 21.5,136.3984 L422.5,136.3984 A0,0 0 0 0 422.5,136.3984 L422.5,129.2656 L462,215.2422 L422.5,121.2656 L422.5,121.2656 L412.5,111.2656 L21.5,111.2656 A0,0 0 0 0 21.5,111.2656 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M412.5,111.2656 L412.5,121.2656 L422.5,121.2656 L412.5,111.2656 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="380" x="27.5" y="128.3325">Create host vlan interface with name rol.{Master}.{VlanID}</text><path d="M21.5,146.3984 L21.5,171.5313 A0,0 0 0 0 21.5,171.5313 L387.5,171.5313 A0,0 0 0 0 387.5,171.5313 L387.5,164.3984 L462,239.5391 L387.5,156.3984 L387.5,156.3984 L377.5,146.3984 L21.5,146.3984 A0,0 0 0 0 21.5,146.3984 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M377.5,146.3984 L377.5,156.3984 L387.5,156.3984 L377.5,146.3984 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="345" x="27.5" y="163.4653">Create host bridge interface with name rol.br.{Name}</text><path d="M21.5,181.5313 L21.5,206.6641 A0,0 0 0 0 21.5,206.6641 L160.5,206.6641 A0,0 0 0 0 160.5,206.6641 L160.5,199.5313 L462,263.8359 L160.5,191.5313 L160.5,191.5313 L150.5,181.5313 L21.5,181.5313 A0,0 0 0 0 21.5,181.5313 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M150.5,181.5313 L150.5,191.5313 L160.5,191.5313 L150.5,181.5313 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="118" x="27.5" y="198.5981">Set master for link</text><path d="M21.5,216.6641 L21.5,241.7969 A0,0 0 0 0 21.5,241.7969 L242.5,241.7969 A0,0 0 0 0 242.5,241.7969 L242.5,234.6641 L462,288.1328 L242.5,226.6641 L242.5,226.6641 L232.5,216.6641 L21.5,216.6641 A0,0 0 0 0 21.5,216.6641 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M232.5,216.6641 L232.5,226.6641 L242.5,226.6641 L232.5,216.6641 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="200" x="27.5" y="233.731">Removes the master of the link</text><path d="M21.5,251.7969 L21.5,276.9297 A0,0 0 0 0 21.5,276.9297 L194.5,276.9297 A0,0 0 0 0 194.5,276.9297 L194.5,269.7969 L462,312.4297 L194.5,261.7969 L194.5,261.7969 L184.5,251.7969 L21.5,251.7969 A0,0 0 0 0 21.5,251.7969 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M184.5,251.7969 L184.5,261.7969 L194.5,261.7969 L184.5,251.7969 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="152" x="27.5" y="268.8638">Enables the link on host</text><path d="M21.5,286.9297 L21.5,312.0625 A0,0 0 0 0 21.5,312.0625 L282.5,312.0625 A0,0 0 0 0 282.5,312.0625 L282.5,304.9297 L462,336.7266 L282.5,296.9297 L282.5,296.9297 L272.5,286.9297 L21.5,286.9297 A0,0 0 0 0 21.5,286.9297 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M272.5,286.9297 L272.5,296.9297 L282.5,296.9297 L272.5,286.9297 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="240" x="27.5" y="303.9966">Deletes interface on host by its name</text><path d="M21.5,322.0625 L21.5,347.1953 A0,0 0 0 0 21.5,347.1953 L301.5,347.1953 A0,0 0 0 0 301.5,347.1953 L301.5,340.0625 L462,361.0234 L301.5,332.0625 L301.5,332.0625 L291.5,322.0625 L21.5,322.0625 A0,0 0 0 0 21.5,322.0625 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M291.5,322.0625 L291.5,332.0625 L301.5,332.0625 L291.5,322.0625 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="259" x="27.5" y="339.1294">Add new ip address for network interface</text><path d="M21.5,357.1953 L21.5,382.3281 A0,0 0 0 0 21.5,382.3281 L289.5,382.3281 A0,0 0 0 0 289.5,382.3281 L289.5,375.1953 L462,385.3203 L289.5,367.1953 L289.5,367.1953 L279.5,357.1953 L21.5,357.1953 A0,0 0 0 0 21.5,357.1953 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M279.5,357.1953 L279.5,367.1953 L289.5,367.1953 L279.5,357.1953 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="247" x="27.5" y="374.2622">Delete ip address for network interface</text><path d="M21.5,392.3281 L21.5,417.4609 A0,0 0 0 0 21.5,417.4609 L323.5,417.4609 A0,0 0 0 0 323.5,417.4609 L323.5,410.3281 L462,409.6172 L323.5,402.3281 L323.5,402.3281 L313.5,392.3281 L21.5,392.3281 A0,0 0 0 0 21.5,392.3281 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M313.5,392.3281 L313.5,402.3281 L323.5,402.3281 L313.5,392.3281 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="281" x="27.5" y="409.395">Create netfilter traffic rule for specified table</text><path d="M21.5,427.4609 L21.5,452.5938 A0,0 0 0 0 21.5,452.5938 L316.5,452.5938 A0,0 0 0 0 316.5,452.5938 L316.5,445.4609 L462,433.9141 L316.5,437.4609 L316.5,437.4609 L306.5,427.4609 L21.5,427.4609 A0,0 0 0 0 21.5,427.4609 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M306.5,427.4609 L306.5,437.4609 L316.5,437.4609 L306.5,427.4609 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="274" x="27.5" y="444.5278">Delete netfilter traffic rule in specified table</text><path d="M21.5,462.5938 L21.5,487.7266 A0,0 0 0 0 21.5,487.7266 L362.5,487.7266 A0,0 0 0 0 362.5,487.7266 L362.5,480.5938 L462,458.2109 L362.5,472.5938 L362.5,472.5938 L352.5,462.5938 L21.5,462.5938 A0,0 0 0 0 21.5,462.5938 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M352.5,462.5938 L352.5,472.5938 L362.5,472.5938 L352.5,462.5938 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="320" x="27.5" y="479.6606">Get selected netfilter chain rules at specified table</text><path d="M21.5,497.7266 L21.5,522.8594 A0,0 0 0 0 21.5,522.8594 L249.5,522.8594 A0,0 0 0 0 249.5,522.8594 L249.5,515.7266 L462,482.5078 L249.5,507.7266 L249.5,507.7266 L239.5,497.7266 L21.5,497.7266 A0,0 0 0 0 21.5,497.7266 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M239.5,497.7266 L239.5,507.7266 L249.5,507.7266 L239.5,497.7266 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="207" x="27.5" y="514.7935">Get specified netfilter table rules</text><path d="M21.5,532.8594 L21.5,557.9922 A0,0 0 0 0 21.5,557.9922 L392.5,557.9922 A0,0 0 0 0 392.5,557.9922 L392.5,550.8594 L462,506.8047 L392.5,542.8594 L392.5,542.8594 L382.5,532.8594 L21.5,532.8594 A0,0 0 0 0 21.5,532.8594 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M382.5,532.8594 L382.5,542.8594 L392.5,542.8594 L382.5,532.8594 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="350" x="27.5" y="549.9263">Save current host network configuration to the storage</text><path d="M21.5,567.9922 L21.5,593.125 A0,0 0 0 0 21.5,593.125 L414.5,593.125 A0,0 0 0 0 414.5,593.125 L414.5,585.9922 L462,531.1016 L414.5,577.9922 L414.5,577.9922 L404.5,567.9922 L21.5,567.9922 A0,0 0 0 0 21.5,567.9922 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M404.5,567.9922 L404.5,577.9922 L414.5,577.9922 L404.5,567.9922 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="372" x="27.5" y="585.0591">Restore and apply host network configuration from backup</text><path d="M21.5,603.125 L21.5,628.2578 A0,0 0 0 0 21.5,628.2578 L421.5,628.2578 A0,0 0 0 0 421.5,628.2578 L421.5,621.125 L462,555.3984 L421.5,613.125 L421.5,613.125 L411.5,603.125 L21.5,603.125 A0,0 0 0 0 21.5,603.125 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M411.5,603.125 L411.5,613.125 L421.5,613.125 L411.5,603.125 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="379" x="27.5" y="620.1919">Reset all applied changes to state from saved configuration</text><path d="M21.5,638.2578 L21.5,663.3906 A0,0 0 0 0 21.5,663.3906 L268.5,663.3906 A0,0 0 0 0 268.5,663.3906 L268.5,656.2578 L462,579.6953 L268.5,648.2578 L268.5,648.2578 L258.5,638.2578 L21.5,638.2578 A0,0 0 0 0 21.5,638.2578 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M258.5,638.2578 L258.5,648.2578 L268.5,648.2578 L258.5,638.2578 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="226" x="27.5" y="655.3247">Gets a flag about unsaved changes</text><!--MD5=[c84664cbbe9e2286255fe287895f3bfe]
@startuml

!include ../interfaces/IHostNetworkLink.puml

package app {
    interface IHostNetworkManager {
        +GetList() ([]IHostNetworkLink, error)
        - -
        +GetByName(name string) (IHostNetworkLink, error)
        - -
        +CreateVlan(master string, vlanID int) (string, error)
        - -
        +CreateBridge(name string) (string, error)
        - -
        +SetLinkMaster(slaveName, masterName string) error
        - -
        +UnsetLinkMaster(linkName string) error
        - -
        +SetLinkUp(linkName string) error
        - -
        +DeleteLinkByName(name string) error
        - -
        +AddrAdd(linkName string, addr net.IPNet) error
        - -
        +AddrDelete(linkName string, addr net.IPNet) error
        - -
        +CreateTrafficRule(table string, rule HostNetworkTrafficRule) (HostNetworkTrafficRule, error)
        - -
        +DeleteTrafficRule(table string, rule HostNetworkTrafficRule) error
        - -
        +GetChainRules(table string, chain string) ([]HostNetworkTrafficRule, error)
        - -
        +GetTableRules(table string) ([]HostNetworkTrafficRule, error)
        - -
        +SaveConfiguration() error
        - -
        +RestoreFromBackup() error
        - -
        +ResetChanges() error
        - -
        +HasUnsavedChanges() bool
    }

    note left of IHostNetworkManager::GetList
    Gets list of host network interfaces
    end note

    note left of IHostNetworkManager::GetByName
    Gets host network interface by its name
    end note

    note left of IHostNetworkManager::CreateVlan
    Create host vlan interface with name rol.{Master}.{VlanID}
    end note

    note left of IHostNetworkManager::CreateBridge
    Create host bridge interface with name rol.br.{Name}
    end note

    note left of IHostNetworkManager::SetLinkMaster
    Set master for link
    end note

    note left of IHostNetworkManager::UnsetLinkMaster
    Removes the master of the link
    end note

    note left of IHostNetworkManager::SetLinkUp
    Enables the link on host
    end note

    note left of IHostNetworkManager::DeleteLinkByName
    Deletes interface on host by its name
    end note

    note left of IHostNetworkManager::AddrAdd
    Add new ip address for network interface
    end note

    note left of IHostNetworkManager::AddrDelete
    Delete ip address for network interface
    end note

    note left of IHostNetworkManager::CreateTrafficRule
    Create netfilter traffic rule for specified table
    end note

    note left of IHostNetworkManager::DeleteTrafficRule
    Delete netfilter traffic rule in specified table
    end note

    note left of IHostNetworkManager::GetChainRules
    Get selected netfilter chain rules at specified table
    end note

    note left of IHostNetworkManager::GetTableRules
    Get specified netfilter table rules
    end note

    note left of IHostNetworkManager::SaveConfiguration
    Save current host network configuration to the storage
    end note

    note left of IHostNetworkManager::RestoreFromBackup
    Restore and apply host network configuration from backup
    end note

    note left of IHostNetworkManager::ResetChanges
    Reset all applied changes to state from saved configuration
    end note

    note left of IHostNetworkManager::HasUnsavedChanges
    Gets a flag about unsaved changes
    end note
}

@enduml

@startuml


package app {
    interface IHostNetworkLink {
        +GetName() string
        - -
        +GetType() string
        - -
        +GetAddresses() []net.IPNet
    }

    note left of IHostNetworkLink::GetName
    Gets host interface name
    end note

    note left of IHostNetworkLink::GetType
    Gets host interface type
    end note

    note left of IHostNetworkLink::GetAddresses
    Gets host interface addresses
    end note
}


package app {
    interface IHostNetworkManager {
        +GetList() ([]IHostNetworkLink, error)
        - -
        +GetByName(name string) (IHostNetworkLink, error)
        - -
        +CreateVlan(master string, vlanID int) (string, error)
        - -
        +CreateBridge(name string) (string, error)
        - -
        +SetLinkMaster(slaveName, masterName string) error
        - -
        +UnsetLinkMaster(linkName string) error
        - -
        +SetLinkUp(linkName string) error
        - -
        +DeleteLinkByName(name string) error
        - -
        +AddrAdd(linkName string, addr net.IPNet) error
        - -
        +AddrDelete(linkName string, addr net.IPNet) error
        - -
        +CreateTrafficRule(table string, rule HostNetworkTrafficRule) (HostNetworkTrafficRule, error)
        - -
        +DeleteTrafficRule(table string, rule HostNetworkTrafficRule) error
        - -
        +GetChainRules(table string, chain string) ([]HostNetworkTrafficRule, error)
        - -
        +GetTableRules(table string) ([]HostNetworkTrafficRule, error)
        - -
        +SaveConfiguration() error
        - -
        +RestoreFromBackup() error
        - -
        +ResetChanges() error
        - -
        +HasUnsavedChanges() bool
    }

    note left of IHostNetworkManager::GetList
    Gets list of host network interfaces
    end note

    note left of IHostNetworkManager::GetByName
    Gets host network interface by its name
    end note

    note left of IHostNetworkManager::CreateVlan
    Create host vlan interface with name rol.{Master}.{VlanID}
    end note

    note left of IHostNetworkManager::CreateBridge
    Create host bridge interface with name rol.br.{Name}
    end note

    note left of IHostNetworkManager::SetLinkMaster
    Set master for link
    end note

    note left of IHostNetworkManager::UnsetLinkMaster
    Removes the master of the link
    end note

    note left of IHostNetworkManager::SetLinkUp
    Enables the link on host
    end note

    note left of IHostNetworkManager::DeleteLinkByName
    Deletes interface on host by its name
    end note

    note left of IHostNetworkManager::AddrAdd
    Add new ip address for network interface
    end note

    note left of IHostNetworkManager::AddrDelete
    Delete ip address for network interface
    end note

    note left of IHostNetworkManager::CreateTrafficRule
    Create netfilter traffic rule for specified table
    end note

    note left of IHostNetworkManager::DeleteTrafficRule
    Delete netfilter traffic rule in specified table
    end note

    note left of IHostNetworkManager::GetChainRules
    Get selected netfilter chain rules at specified table
    end note

    note left of IHostNetworkManager::GetTableRules
    Get specified netfilter table rules
    end note

    note left of IHostNetworkManager::SaveConfiguration
    Save current host network configuration to the storage
    end note

    note left of IHostNetworkManager::RestoreFromBackup
    Restore and apply host network configuration from backup
    end note

    note left of IHostNetworkManager::ResetChanges
    Reset all applied changes to state from saved configuration
    end note

    note left of IHostNetworkManager::HasUnsavedChanges
    Gets a flag about unsaved changes
    end note
}

@enduml

PlantUML version 1.2022.12(Sun Oct 23 18:12:26 EGST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>