---
name: PlantumlSVG
on:
  push:
    branches:
      - main
    paths:
      - '**.puml'
jobs:
  plantuml_svg_gen:
    runs-on: ubuntu-latest
    name: Plantuml SVG generation
    steps:
      - name: Setup packages
        run: |
          sudo apt update
          sudo apt install -y default-jdk graphviz
      - name: Create new branch for SVG update
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.git.createRef({
              owner: owner,
              repo: repo,
              ref: 'refs/heads/plantuml-svg-update-${{ github.run_number }}',
              sha: process.env.GITHUB_SHA,
            });
            console.log(process.env.GITHUB_SHA)
      - name: Checkout to the new branch
        uses: actions/checkout@v3
        with:
          ref: 'refs/heads/plantuml-svg-update-${{ github.run_number }}'
      - name: Generate SVG
        run: |
          wget -O plantuml.jar https://github.com/lf-edge/plantuml/releases/download/v1.2022.5/plantuml-1.2022.5.jar
          for file in $(find . -name '*.puml'); do
            java -jar plantuml.jar -tsvg "$file"
          done
          rm plantuml.jar
      - name: Create commit and push
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add -A
          git commit -am "[plantuml] Automated svg generation"
          git push
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              state: 'closed',
              per_page: 100,
              page: 1,
            });
            var prNumber = 0;
            pulls.data.forEach(element => {
              if (element.merge_commit_sha == process.env.GITHUB_SHA) {
                prNumber = element.number
              }
            })
            const result = await github.rest.pulls.create({
              title: '[plantuml] Update SVG diagrams',
              owner,
              repo,
              head: 'refs/heads/plantuml-svg-update-${{ github.run_number }}',
              base: 'main',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).',
                "Initialized from PR: #" + prNumber,
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['plantuml', 'documentation', 'automated pr']
            });
